services:
  prestart:
    build:
      context: .
    command: bash scripts/prestart.sh
    env_file:
      - .env
    ports:
      - 50051:50051
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - backend_network

  server:
    build:
      context: .
    restart: always
    env_file:
      - .env
    ports:
      - 50051:50051
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    networks:
      - backend_network

  postgres:
    image: "postgres"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend_network

  pgadmin:
    image: "dpage/pgadmin4"
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
